services:
  postgres:
    image: postgres:${PG_VER:-16}
    # image: postgres:${PG_VERSION:-16}
    container_name: dblab-pg-${PG_VER:-16}
    # container_name: db-lab-postgres
    ports:
      - "${PGPORT:-5432}:5432"
    # ports:
    #   - "${PGHOST:-postgres}:${PGPORT:-55432}:5432"
    environment:
      POSTGRES_PASSWORD: ${PGPASSWORD:-postgres}
      POSTGRES_USER: ${PGUSER:-postgres}
      POSTGRES_DB: ${PGDATABASE:-postgres}
    # environment:
    #   POSTGRES_USER: ${PGUSER:-postgres}
    #   POSTGRES_PASSWORD: ${PGPASSWORD:-postgres}
    #   POSTGRES_DB: ${PGDATABASE:-postgres}
    volumes:
      - pgdata:/var/lib/postgresql/data
    # volumes:
    #   - pgdata:/var/lib/postgresql/data
    #   - ./init/postgres:/docker-entrypoint-initdb.d:ro
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U ${PGUSER:-postgres} -d ${PGDATABASE:-postgres}"]
    #   interval: 2s
    #   timeout: 3s
    #   retries: 30
    # restart: unless-stopped
    networks: [dblab-net]
    # networks:
    #   - dblab
    profiles: ["engine"]

  cli:
    build:
      context: .
      dockerfile: cli.Dockerfile
    container_name: ${PROJECT_NAME:-dblab-pg}-cli
    profiles: ["cli"]
    working_dir: /work
    volumes:
      - .:/work
    # env_file: [ ./.env ]
    # entrypoint: [ "sleep", "infinity" ]
    # restart: unless-stopped
    # logging: { options: { max-size: "10m", max-file: "2" } }
    # networks: [ dblab ]
    networks: [dblab-net]
    # environment:
    #   PGPASSWORD: ${PGPASSWORD:-postgres}

volumes:
  pgdata:
#     name: ${PROJECT_NAME:-dblab-pg}-data

networks:
  dblab-net:
    name: ${DBLAB_NETWORK_NAME:-dblab-net}
    external: true
#     name: ${DBLAB_NETWORK:-dblab}

