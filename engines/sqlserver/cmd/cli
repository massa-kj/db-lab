#!/usr/bin/env bash
set -euo pipefail
source "$LIBRARY_ROOT/engine-lib.sh"

# - Insert into table:  
#   `db mssql cli in <db>..<table> /data/file.tsv -c`  
# - Export from table:  
#   `db mssql cli out <db>..<table> /data/file.tsv -c`  
# - Export SELECT results:  
#   `db mssql cli queryout "SELECT ... FROM ..." /data/file.tsv -c`  
#
# -c : Character type (text, e.g. TSV/CSV, default encoding)
# -w : Unicode type (UTF-16LE, for handling Unicode data)
# -n : Native type (SQL Server's internal binary format)
# -N : Unicode native type (SQL Server's internal Unicode format)
# Use -c for text files, -w for Unicode text, -n/-N for fastest transfer between SQL Servers.

( cd "$ENGINE_ROOT/sqlserver"
    case "${CLI_TOOL}" in
        "/opt/mssql-tools18/bin/bcp")
            # $1: direction (in/out/queryout), $2: table or query, $3: file, $4...: extra options
            direction="${1:-out}"
            target="${2:-<db>..<table>}"
            file="${3:-/data/file.tsv}"
            shift 3 || true
            cmd="${CLI_TOOL} '${target}' ${direction} ${file} -S ${DB_HOST},${DB_PORT} -U ${DB_USER} -P ${DB_PASSWORD} -C 65001 -S 'mssql,1433;TrustServerCertificate=yes' $*"
            ;;
        "/opt/mssql-tools18/bin/sqlcmd")
            cmd="${CLI_TOOL} -C -S ${DB_HOST},${DB_PORT} -U ${DB_USER} -P "${DB_PASSWORD}" -d ${DB_NAME}"
            ;;
        *)
            echo "Unsupported CLI tool: ${CLI_TOOL}"
            exit 1
            ;;
    esac
    compose -f compose.yaml --profile cli run --rm cli "$cmd"
)

